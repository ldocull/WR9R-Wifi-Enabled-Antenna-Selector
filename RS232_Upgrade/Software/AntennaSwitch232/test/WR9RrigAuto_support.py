#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 7.6
#  in conjunction with Tcl version 8.6
#    Jan 04, 2023 09:15:55 AM EST  platform: Windows NT

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *

import config
import WR9RrigAuto
import WR9R_rig_ctrl

_debug = True # False to eliminate debug printing from callback functions.

def main(*args):
    '''Main entry point for the application.'''
    global root
    root = tk.Tk()
    root.protocol( 'WM_DELETE_WINDOW' , root.destroy)
    # Creates a toplevel widget.
    global _top1, _w1
    config._top1 = root
    config._w1 = WR9RrigAuto.Toplevel1(config._top1)
    WR9R_rig_ctrl.WR9R_init()
    config._w1.FullAuto.set(1)
    root.after(1000, WR9R_rig_ctrl.station_service)
    root.mainloop()

def AutoStatus(*args):
    if _debug:
        print('WR9RrigAuto_support.AutoStatus')
        for arg in args:
            print ('    another arg:', arg)
        sys.stdout.flush()

    print(config._w1.FullAuto.get())

def JustLeave(*args):
    if _debug:
        print('WR9RrigAuto_support.JustLeave')
        for arg in args:
            print ('    another arg:', arg)

    sys.stdout.flush()
    WR9R_rig_ctrl.WR9R_shutdown()
    sys.exit()

def KAT500_Select(*args):
    if _debug:
        print('WR9RrigAuto_support.KAT500_Select')
        for arg in args:
            print ('    another arg:', arg)
        sys.stdout.flush()

    WR9R_rig_ctrl.setKat500(config._w1.KATButton.get())

# def SkipTune(*args):
#     if _debug:
#         print('WR9RrigAuto_support.SkipTune')
#         for arg in args:
#             print ('    another arg:', arg)
#         sys.stdout.flush()

def TunerUP(*args):
    if _debug:
        print('WR9RrigAuto_support.TunerUP')
        for arg in args:
            print ('    another arg:', arg)
        sys.stdout.flush()

    WR9R_rig_ctrl.tune_default(3)

def WR9R_Select(*args):
    if _debug:
        print('WR9RrigAuto_support.WR9R_Select')
        for arg in args:
            print ('    another arg:', arg)
        sys.stdout.flush()

    WR9R_rig_ctrl.switch_change(config._w1.selectedButton.get())
        
if __name__ == '__main__':
    WR9RrigAuto.start_up()

